IP Head: 11.2.28.4:6379
STARTING HEAD at c0333
2025-09-29 18:11:07,897	INFO usage_lib.py:473 -- Usage stats collection is enabled by default without user confirmation because this terminal is detected to be non-interactive. To disable this, add `--disable-usage-stats` to the command that starts the cluster, or run the following command: `ray disable-usage-stats` before starting the cluster. See https://docs.ray.io/en/master/cluster/usage-stats.html for more details.
2025-09-29 18:11:07,898	INFO scripts.py:913 -- [37mLocal node IP[39m: [1m11.2.28.4[22m
2025-09-29 18:11:17,315	SUCC scripts.py:949 -- [32m--------------------[39m
2025-09-29 18:11:17,315	SUCC scripts.py:950 -- [32mRay runtime started.[39m
2025-09-29 18:11:17,315	SUCC scripts.py:951 -- [32m--------------------[39m
2025-09-29 18:11:17,315	INFO scripts.py:953 -- [36mNext steps[39m
2025-09-29 18:11:17,315	INFO scripts.py:956 -- To add another node to this Ray cluster, run
2025-09-29 18:11:17,316	INFO scripts.py:959 -- [1m  ray start --address='11.2.28.4:6379'[22m
2025-09-29 18:11:17,316	INFO scripts.py:968 -- To connect to this Ray cluster:
2025-09-29 18:11:17,316	INFO scripts.py:970 -- [35mimport[39m[26m ray
2025-09-29 18:11:17,316	INFO scripts.py:971 -- ray[35m.[39m[26minit(_node_ip_address[35m=[39m[26m[33m'11.2.28.4'[39m[26m)
2025-09-29 18:11:17,316	INFO scripts.py:983 -- To submit a Ray job using the Ray Jobs CLI:
2025-09-29 18:11:17,316	INFO scripts.py:984 -- [1m  RAY_API_SERVER_ADDRESS='http://127.0.0.1:8265' ray job submit --working-dir . -- python my_script.py[22m
2025-09-29 18:11:17,316	INFO scripts.py:993 -- See https://docs.ray.io/en/latest/cluster/running-applications/job-submission/index.html 
2025-09-29 18:11:17,316	INFO scripts.py:997 -- for more information on submitting Ray jobs to the Ray cluster.
2025-09-29 18:11:17,316	INFO scripts.py:1002 -- To terminate the Ray runtime, run
2025-09-29 18:11:17,317	INFO scripts.py:1003 -- [1m  ray stop[22m
2025-09-29 18:11:17,317	INFO scripts.py:1006 -- To view the status of the cluster, use
2025-09-29 18:11:17,317	INFO scripts.py:1007 --   [1mray status[22m[26m
2025-09-29 18:11:17,317	INFO scripts.py:1011 -- To monitor and debug Ray, view the dashboard at 
2025-09-29 18:11:17,317	INFO scripts.py:1012 --   [1m127.0.0.1:8265[22m[26m
2025-09-29 18:11:17,317	INFO scripts.py:1019 -- [4mIf connection to the dashboard fails, check your firewall settings and network configuration.[24m
2025-09-29 18:11:17,317	INFO scripts.py:1123 -- [36m[1m--block[22m[39m
2025-09-29 18:11:17,317	INFO scripts.py:1124 -- This command will now block forever until terminated by a signal.
2025-09-29 18:11:17,318	INFO scripts.py:1127 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.
STARTING WORKER 1 at c0341
STARTING WORKER 2 at c0476
STARTING WORKER 3 at c0477
2025-09-29 18:11:44.394 | INFO     | __main__:<module>:34 - Ray start by 1.2e-06s.
2025-09-29 18:11:44.394 | INFO     | __main__:<module>:35 - --------------------------------
2025-09-29 18:11:44,476	INFO worker.py:1771 -- Connecting to existing Ray cluster at address: 11.2.28.4:6379...
2025-09-29 18:11:44,500	INFO worker.py:1942 -- Connected to Ray cluster. View the dashboard at [1m[32mhttp://127.0.0.1:8265 [39m[22m
2025-09-29 18:11:42,684	INFO scripts.py:1094 -- [37mLocal node IP[39m: [1m11.2.40.7[22m
2025-09-29 18:11:45,579	SUCC scripts.py:1110 -- [32m--------------------[39m
2025-09-29 18:11:45,579	SUCC scripts.py:1111 -- [32mRay runtime started.[39m
2025-09-29 18:11:45,579	SUCC scripts.py:1112 -- [32m--------------------[39m
2025-09-29 18:11:45,579	INFO scripts.py:1114 -- To terminate the Ray runtime, run
2025-09-29 18:11:45,580	INFO scripts.py:1115 -- [1m  ray stop[22m
2025-09-29 18:11:45,580	INFO utils.py:87 -- Overwriting previous Ray address (11.2.40.7:6379). Running ray.init() on this node will now connect to the new instance at 11.2.28.4:6379. To override this behavior, pass address=11.2.40.7:6379 to ray.init().
2025-09-29 18:11:45,581	INFO scripts.py:1123 -- [36m[1m--block[22m[39m
2025-09-29 18:11:45,581	INFO scripts.py:1124 -- This command will now block forever until terminated by a signal.
2025-09-29 18:11:45,581	INFO scripts.py:1127 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.
2025-09-29 18:11:49.344 | INFO     | __main__:<module>:40 - Doing Once: 
2025-09-29 18:11:49.986 | INFO     | __main__:<module>:44 - Running 1000000 tests took 5.59 seconds
2025-09-29 18:11:49.987 | INFO     | __main__:<module>:45 - --------------------------------
2025-09-29 18:11:49.987 | INFO     | __main__:<module>:47 - Doing 840000 batches
2025-09-29 18:12:18,970	INFO scripts.py:1094 -- [37mLocal node IP[39m: [1m11.2.40.8[22m
2025-09-29 18:12:24,841	SUCC scripts.py:1110 -- [32m--------------------[39m
2025-09-29 18:12:24,841	SUCC scripts.py:1111 -- [32mRay runtime started.[39m
2025-09-29 18:12:24,841	SUCC scripts.py:1112 -- [32m--------------------[39m
2025-09-29 18:12:24,841	INFO scripts.py:1114 -- To terminate the Ray runtime, run
2025-09-29 18:12:24,841	INFO scripts.py:1115 -- [1m  ray stop[22m
2025-09-29 18:12:18,970	INFO scripts.py:1094 -- [37mLocal node IP[39m: [1m11.2.29.2[22m
2025-09-29 18:12:24,844	SUCC scripts.py:1110 -- [32m--------------------[39m
2025-09-29 18:12:24,844	SUCC scripts.py:1111 -- [32mRay runtime started.[39m
2025-09-29 18:12:24,844	SUCC scripts.py:1112 -- [32m--------------------[39m
2025-09-29 18:12:24,844	INFO scripts.py:1114 -- To terminate the Ray runtime, run
2025-09-29 18:12:24,844	INFO scripts.py:1115 -- [1m  ray stop[22m
2025-09-29 18:12:24,841	INFO scripts.py:1123 -- [36m[1m--block[22m[39m
2025-09-29 18:12:24,841	INFO scripts.py:1124 -- This command will now block forever until terminated by a signal.
2025-09-29 18:12:24,841	INFO scripts.py:1127 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.
2025-09-29 18:12:24,846	INFO scripts.py:1123 -- [36m[1m--block[22m[39m
2025-09-29 18:12:24,846	INFO scripts.py:1124 -- This command will now block forever until terminated by a signal.
2025-09-29 18:12:24,846	INFO scripts.py:1127 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.
2025-09-29 18:35:59.877 | INFO     | __main__:<module>:54 - Running 840000000000 tests took 1449.89 seconds.
2025-09-29 18:35:59.889 | INFO     | __main__:<module>:58 - --------------------------------
2025-09-29 18:35:59.890 | INFO     | __main__:<module>:63 - Doing Once: 
2025-09-29 18:36:00.126 | INFO     | __main__:<module>:67 - Running 1000000 tests took 0.24 seconds
2025-09-29 18:36:00.126 | INFO     | __main__:<module>:68 - --------------------------------
